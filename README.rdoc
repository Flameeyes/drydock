= Drydock - Easy Command line apps

Inspired by "github-gem":http://github.com/defunkt/github-gem

Inspired by "bmizerany-frylock":http://github.com/bmizerany/frylock/tree

== Overview

Drydock is a DSL for command line apps. It is contained in a single .rb which can be copied directly into your project. 

== Install

One of:

* git clone git://github.com/delano/drydock.git
* copy `lib/drydock.rb` into your lib directory. 

== Examples

See bin/example for more. 

	require 'rubygems'
	require 'drydock'

	default :welcome

	before do
	# You can execute a block before the requests command is executed. Instance
	# variables defined here will be available to all commands.
	end

	command :welcome do
	# Example: ruby bin/example

	  puts "Meatwad: Science is a mystery to man, isn't it Frylock?"
	  print "Frylock: At least we have some commands: "
  
	  # The commands method returns a hash of Frylock::Command objects
	  puts commands.keys.inject([]) { |list, command| list << command.to_s }.sort.join(', ')
	end

	option :f, :found, "A boolean value. Did you find the car?"
	command :findcar do |options|
	# +options+ is a hash containing the options defined above
	# Example: ruby bin/example -f findcar
  
	  puts "Frylock: So, did they ever find your car?"
  
	  # The keys to the hash are the long string from the option definition.
	  # If only the short string is provided, those will be used instead (i.e. :f). 
	  puts (!options[:found]) ? "Carl: No" : 
	    "Carl: Oh, they found part of it, hangin' from a trestle near the turnpike."
	end

== License

See LICENSE.txt
